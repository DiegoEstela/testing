[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.\n\n","type":"text","id":"12frm"},{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>ContentInfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> TextBox\n      <li> Listitem</li>\n      <ul>ListGroup</ul>\n    </div>\n  );\n}\nrender(<RoleExample />);","type":"code","id":"qbpvt"},{"content":"test('can find elements by role', () =>{\r\n  render(<RoleExample/>)\r\n\r\n  const roles= [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ]\r\n\r\n  for (let role of roles){\r\n    const elements = screen.getByRole(role)\r\n    expect(elements).toBeInTheDocument()\r\n  }\r\n})","type":"code","id":"ouucw"},{"content":"function AccessibleName() {\n  return (\n    <div>\n      <button>Submit </button>\n      <button>Cancel </button>\n    </div>\n  );\n}\n\nrender(<AccessibleName/>)","type":"code","id":"m2ip3"},{"content":"test('can select by accessible name', ()=>{\r\n  render(<AccessibleName/>)\r\n\r\n  const submitButton  = screen.getByRole('button', {name: /submit/i})\r\n  const cancelButton  = screen.getByRole('button', {name: /cancel/i})\r\n\r\n  expect(submitButton).toBeInTheDocument()\r\n   expect(cancelButton).toBeInTheDocument()\r\n})","type":"code","id":"4riwx"}]